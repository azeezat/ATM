<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>